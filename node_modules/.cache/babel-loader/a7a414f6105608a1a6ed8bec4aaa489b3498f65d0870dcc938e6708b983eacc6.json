{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Murtaza\\\\Desktop\\\\PROJECT\\\\electric-vehicles\\\\src\\\\components\\\\TopMakesChart.jsx\";\nimport React from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#8884d8\", \"#82ca9d\", \"#ffc658\", \"#ff7f50\", \"#a4de6c\"];\nconst TopMakesChart = ({\n  data\n}) => {\n  const makeCount = {};\n  data.forEach(ev => {\n    const make = ev[\"Make\"];\n    if (make) makeCount[make] = (makeCount[make] || 0) + 1;\n  });\n  const sorted = Object.entries(makeCount).sort((a, b) => b[1] - a[1]).slice(0, 5).map(([name, value]) => ({\n    name,\n    value\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFED Top 5 EV Manufacturers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 400,\n      height: 300,\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: sorted,\n        dataKey: \"value\",\n        nameKey: \"name\",\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 100,\n        fill: \"#8884d8\",\n        label: true,\n        children: sorted.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = TopMakesChart;\nexport default TopMakesChart;\nvar _c;\n$RefreshReg$(_c, \"TopMakesChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","Tooltip","Legend","jsxDEV","_jsxDEV","COLORS","TopMakesChart","data","makeCount","forEach","ev","make","sorted","Object","entries","sort","a","b","slice","map","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","label","entry","index","length","_c","$RefreshReg$"],"sources":["C:/Users/Ali Murtaza/Desktop/PROJECT/electric-vehicles/src/components/TopMakesChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\r\n\r\nconst COLORS = [\"#8884d8\", \"#82ca9d\", \"#ffc658\", \"#ff7f50\", \"#a4de6c\"];\r\n\r\nconst TopMakesChart = ({ data }) => {\r\n  const makeCount = {};\r\n  data.forEach((ev) => {\r\n    const make = ev[\"Make\"];\r\n    if (make) makeCount[make] = (makeCount[make] || 0) + 1;\r\n  });\r\n\r\n  const sorted = Object.entries(makeCount)\r\n    .sort((a, b) => b[1] - a[1])\r\n    .slice(0, 5)\r\n    .map(([name, value]) => ({ name, value }));\r\n\r\n  return (\r\n    <div>\r\n      <h2>üè≠ Top 5 EV Manufacturers</h2>\r\n      <PieChart width={400} height={300}>\r\n        <Pie data={sorted} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\r\n          {sorted.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopMakesChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAEtE,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAClC,MAAMC,SAAS,GAAG,CAAC,CAAC;EACpBD,IAAI,CAACE,OAAO,CAAEC,EAAE,IAAK;IACnB,MAAMC,IAAI,GAAGD,EAAE,CAAC,MAAM,CAAC;IACvB,IAAIC,IAAI,EAAEH,SAAS,CAACG,IAAI,CAAC,GAAG,CAACH,SAAS,CAACG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;EACxD,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGC,MAAM,CAACC,OAAO,CAACN,SAAS,CAAC,CACrCO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3BE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACXC,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,MAAM;IAAED,IAAI;IAAEC;EAAM,CAAC,CAAC,CAAC;EAE5C,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCtB,OAAA,CAACN,QAAQ;MAAC6B,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,gBAChClB,OAAA,CAACL,GAAG;QAACQ,IAAI,EAAEK,MAAO;QAACiB,OAAO,EAAC,OAAO;QAACC,OAAO,EAAC,MAAM;QAACC,EAAE,EAAC,KAAK;QAACC,EAAE,EAAC,KAAK;QAACC,WAAW,EAAE,GAAI;QAACC,IAAI,EAAC,SAAS;QAACC,KAAK;QAAAb,QAAA,EACvGV,MAAM,CAACO,GAAG,CAAC,CAACiB,KAAK,EAAEC,KAAK,kBACvBjC,OAAA,CAACJ,IAAI;UAAuBkC,IAAI,EAAE7B,MAAM,CAACgC,KAAK,GAAGhC,MAAM,CAACiC,MAAM;QAAE,GAArD,QAAQD,KAAK,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwC,CACnE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtB,OAAA,CAACH,OAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXtB,OAAA,CAACF,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACa,EAAA,GA1BIjC,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}