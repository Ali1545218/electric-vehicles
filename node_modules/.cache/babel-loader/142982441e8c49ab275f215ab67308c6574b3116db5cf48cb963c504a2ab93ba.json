{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Murtaza\\\\Desktop\\\\PROJECT\\\\electric-vehicles\\\\src\\\\components\\\\VehicleTypesChart.jsx\";\nimport React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VehicleTypesChart = ({\n  data\n}) => {\n  const typeCount = {};\n  data.forEach(ev => {\n    const type = ev[\"Electric Vehicle Type\"];\n    if (type) typeCount[type] = (typeCount[type] || 0) + 1;\n  });\n  const chartData = Object.entries(typeCount).map(([type, count]) => ({\n    type,\n    count\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDE99 EV Types Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#34d399\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = VehicleTypesChart;\nexport default VehicleTypesChart;\nvar _c;\n$RefreshReg$(_c, \"VehicleTypesChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","VehicleTypesChart","data","typeCount","forEach","ev","type","chartData","Object","entries","map","count","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/Users/Ali Murtaza/Desktop/PROJECT/electric-vehicles/src/components/VehicleTypesChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst VehicleTypesChart = ({ data }) => {\r\n  const typeCount = {};\r\n\r\n  data.forEach((ev) => {\r\n    const type = ev[\"Electric Vehicle Type\"];\r\n    if (type) typeCount[type] = (typeCount[type] || 0) + 1;\r\n  });\r\n\r\n  const chartData = Object.entries(typeCount).map(([type, count]) => ({\r\n    type,\r\n    count,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <h2>ðŸš™ EV Types Distribution</h2>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={chartData}>\r\n          <XAxis dataKey=\"type\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Bar dataKey=\"count\" fill=\"#34d399\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VehicleTypesChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErF,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACtC,MAAMC,SAAS,GAAG,CAAC,CAAC;EAEpBD,IAAI,CAACE,OAAO,CAAEC,EAAE,IAAK;IACnB,MAAMC,IAAI,GAAGD,EAAE,CAAC,uBAAuB,CAAC;IACxC,IAAIC,IAAI,EAAEH,SAAS,CAACG,IAAI,CAAC,GAAG,CAACH,SAAS,CAACG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;EACxD,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACN,SAAS,CAAC,CAACO,GAAG,CAAC,CAAC,CAACJ,IAAI,EAAEK,KAAK,CAAC,MAAM;IAClEL,IAAI;IACJK;EACF,CAAC,CAAC,CAAC;EAEH,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjChB,OAAA,CAACF,mBAAmB;MAACmB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5CZ,OAAA,CAACP,QAAQ;QAACS,IAAI,EAAEK,SAAU;QAAAK,QAAA,gBACxBZ,OAAA,CAACL,KAAK;UAACwB,OAAO,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxBhB,OAAA,CAACJ,KAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACThB,OAAA,CAACH,OAAO;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXhB,OAAA,CAACN,GAAG;UAACyB,OAAO,EAAC,OAAO;UAACC,IAAI,EAAC;QAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACK,EAAA,GA1BIpB,iBAAiB;AA4BvB,eAAeA,iBAAiB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}