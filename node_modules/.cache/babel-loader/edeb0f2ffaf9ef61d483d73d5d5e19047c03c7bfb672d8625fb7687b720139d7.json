{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Murtaza\\\\Desktop\\\\PROJECT\\\\electric-vehicles\\\\src\\\\components\\\\Charts\\\\YearTrendLineChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\nimport data from '../../data/ev-data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YearTrendLineChart = () => {\n  const yearCount = data.reduce((acc, curr) => {\n    const year = curr['Model Year'];\n    acc[year] = (acc[year] || 0) + 1;\n    return acc;\n  }, {});\n  const chartData = Object.entries(yearCount).map(([year, count]) => ({\n    year: parseInt(year),\n    count\n  })).sort((a, b) => a.year - b.year);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"EV Registrations Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 600,\n      height: 300,\n      data: chartData,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#ccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"count\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = YearTrendLineChart;\nexport default YearTrendLineChart;\nvar _c;\n$RefreshReg$(_c, \"YearTrendLineChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","data","jsxDEV","_jsxDEV","YearTrendLineChart","yearCount","reduce","acc","curr","year","chartData","Object","entries","map","count","parseInt","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","stroke","dataKey","type","_c","$RefreshReg$"],"sources":["C:/Users/Ali Murtaza/Desktop/PROJECT/electric-vehicles/src/components/Charts/YearTrendLineChart.js"],"sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\nimport data from '../../data/ev-data.json';\r\n\r\nconst YearTrendLineChart = () => {\r\n  const yearCount = data.reduce((acc, curr) => {\r\n    const year = curr['Model Year'];\r\n    acc[year] = (acc[year] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const chartData = Object.entries(yearCount)\r\n    .map(([year, count]) => ({ year: parseInt(year), count }))\r\n    .sort((a, b) => a.year - b.year);\r\n\r\n  return (\r\n    <div>\r\n      <h2>EV Registrations Over Time</h2>\r\n      <LineChart width={600} height={300} data={chartData}>\r\n        <CartesianGrid stroke=\"#ccc\" />\r\n        <XAxis dataKey=\"year\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Line type=\"monotone\" dataKey=\"count\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearTrendLineChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,QAAQ,UAAU;AAChF,OAAOC,IAAI,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,SAAS,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC3C,MAAMC,IAAI,GAAGD,IAAI,CAAC,YAAY,CAAC;IAC/BD,GAAG,CAACE,IAAI,CAAC,GAAG,CAACF,GAAG,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAChC,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAMG,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACP,SAAS,CAAC,CACxCQ,GAAG,CAAC,CAAC,CAACJ,IAAI,EAAEK,KAAK,CAAC,MAAM;IAAEL,IAAI,EAAEM,QAAQ,CAACN,IAAI,CAAC;IAAEK;EAAM,CAAC,CAAC,CAAC,CACzDE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACR,IAAI,GAAGS,CAAC,CAACT,IAAI,CAAC;EAElC,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCpB,OAAA,CAACR,SAAS;MAAC6B,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACxB,IAAI,EAAES,SAAU;MAAAS,QAAA,gBAClDhB,OAAA,CAACH,aAAa;QAAC0B,MAAM,EAAC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BpB,OAAA,CAACN,KAAK;QAAC8B,OAAO,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBpB,OAAA,CAACL,KAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTpB,OAAA,CAACJ,OAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXpB,OAAA,CAACP,IAAI;QAACgC,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,OAAO;QAACD,MAAM,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACM,EAAA,GAvBIzB,kBAAkB;AAyBxB,eAAeA,kBAAkB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}